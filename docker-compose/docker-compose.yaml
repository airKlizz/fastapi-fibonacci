version: '3.2'

services:

  grafana:
    build:
      context: ./grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "secret"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/sample/sample-dashboard.json"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - scaphandre-network
    volumes:
      - type: bind
        source: "./dashboards/sample-dashboard.json"
        target: "/var/lib/grafana/dashboards/sample/sample-dashboard.json"

  scaphandre:
    image: hubblo/scaphandre
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: /proc
        target: /proc
      - type: bind
        source: /sys/class/powercap
        target: /sys/class/powercap
    command: [ "prometheus" ]
    networks:
      - scaphandre-network

  #Â This service name and port is referenced in k6.env
  prometheus:
    build:
      context: ./prom
    command: --web.enable-remote-write-receiver --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    volumes:
      - promdata-scaphandre:/prometheus
    networks:
      - scaphandre-network

  fastapi:
    build:
      context: ../
    ports:
      - "4000:80"
    networks:
      - scaphandre-network

  k6:
    image: grafana/k6
    command:
      [
        'run',
        '-o',
        'experimental-prometheus-rw',
        'test/inefficient_fibonacci.js'
      ]
    networks:
      - scaphandre-network
    env_file:
      - k6.env
    volumes:
      - ../:/home/k6
    depends_on:
      - scaphandre
      - prometheus
      - fastapi
    ports:
      - "4100:80"
    restart: "no"

volumes:
  promdata-scaphandre:


networks:
  scaphandre-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.33.0/24
